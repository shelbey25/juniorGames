// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Matches {
  id              Int      @id @default(autoincrement())
  users           User[]
  aUserID         String   @default("")
  bUserID         String   @default("")
  aUserRegistered Boolean  @default(false)
  bUserRegistered Boolean  @default(false)
  aUserShow       Boolean  @default(false)
  bUserShow       Boolean  @default(false)
  dateRevealed    DateTime @default("2012-09-12T00:00:00.000Z")
}

//Add archival, so have record of complaints

model Report {
  id            Int    @id @default(autoincrement())
  information   String @default("")
  reportingUser User   @relation("ReportingUser", fields: [userId], references: [id])
  reportedUser  User   @relation("ReportedUser", fields: [userId2], references: [id])
  userId        String
  userId2       String
}

model Complaint {
  id           Int     @id @default(autoincrement())
  information  String  @default("")
  complaintUse User    @relation("ComplaintUser", fields: [userId], references: [id])
  userId       String
  archived     Boolean @default(false)
}

model User {
  id                 String      @id @default(cuid())
  email              String      @unique
  emailName          String      @default("")
  banned             Boolean     @default(false)
  verified           Boolean     @default(false)
  displayName        String      @default("")
  interests          User[]      @relation("RizzlerLikes")
  likesMe            User[]      @relation("RizzlerLikes")
  registeredInterest User[]      @relation("RizzlerPast")
  registeredMe       User[]      @relation("RizzlerPast")
  lastLogin          DateTime    @default("2012-09-12T00:00:00.000Z")
  lastUpdate         DateTime    @default("2012-09-12T00:00:00.000Z")
  nextCharge         DateTime    @default("2012-09-12T00:00:00.000Z")
  lastClaimed        DateTime    @default("2012-09-12T00:00:00.000Z")
  gender             String      @default("Male")
  attraction         String      @default("Female")
  Matches            Matches[]
  Community          Community?  @relation(fields: [communityId], references: [id])
  communityId        Int?
  tokens             Int         @default(0)
  uriImage           String      @default("")
  arrows             Int         @default(0)
  dreamLastUpdate    DateTime    @default("2012-09-12T00:00:00.000Z")
  dreamMatch         User[]      @relation("Dream")
  chasesMe           User[]      @relation("Dream")
  currentlyDis       User[]      @relation("Displayed")
  disOn              User[]      @relation("Displayed")
  checkInDay         Int         @default(1)
  graduationYear     Int         @default(2024)
  reportsFile        Report[]    @relation("ReportingUser")
  reported           Report[]    @relation("ReportedUser")
  complaintFile      Complaint[] @relation("ComplaintUser")
}

model Community {
  id           Int      @id @default(autoincrement())
  users        User[]
  weeklyReveal DateTime
  maxArrows    Int      @default(3)
  domain       String   @unique
  boyCount     Int      @default(0)
  girlCount    Int      @default(0)
}

model JuniorGames {
  id           Int      @id @default(autoincrement())
  personCaught String   @default("")
  killer       String   @default("")
  timeCaught   DateTime @default("2012-09-12T00:00:00.000Z")
  active       Boolean  @default(true)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
